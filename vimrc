let @1 = "/__new__o		for key in list(dct):			attr = dct[key]			if isinstance(attr, IntegerAttribute):				del dct[key]:w"
let @2 = ":2Cdef get_setter(self, name):		def setter(this, value):			setattr(this, name, value)		return setter/isinstanceo				dct['€kbf'set_{key}'] = attr.get_setter(key):w"
let @3 = "/return settero	def get_getter(self, name):		deg €kb€kbf getter(this)a:			return getattr(this, name)		return getter/isinstanceo				dct[f'get_{key}'] = attr.get_getter(key):w"
let @4 = ":1o	def __inin€kbt__(self, defaut-€kb€kblt=€kb=None):		self.default -€kb= fa€kb€kbdefaulto/return getattrf)i, self.default:w"
let @5 = "/def settero			if not isinstance(value, int):				raise TypeErrr€kbor('€kbf'{value} is not of type int'):w"
let @6 = "/default,€kb-=€kb€kb=Nonef)i, maximum=maximum€kb€kb€kb€kb€kb€kb€kbNonejo		self.maximum -€kb= maximum/TypeErroro			if self.maximum is not None and value > self.maximum:				raise ValueError(f'{value} is larger than /se€kb€kb€kb/e€kb€kb{self.maximum}'):€kb:w"
